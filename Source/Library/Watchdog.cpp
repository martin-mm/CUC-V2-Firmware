// ---------------------------------------------------------------------------
//! \package     ARMLibrary
//! \file        Watchdog.cpp
//! \brief       Defines a small wrapper around the CPU watchdog
//! 
//! \copyright   Copyright (C) 2011-2012 BlueBotics SA
// ----------------------------------------------------------------------------

// ----------------------------------------------------------------------------
// Includes
#include "Watchdog.h"
#include "board.h"

#define	ENABLE_WATCHDOG
#undef	ENABLE_WATCHDOG

// ----------------------------------------------------------------------------
//! \brief Constructor
Watchdog::Watchdog(void)
{
	// The Watchdog Frequency is generated by the MK22's Low Power Oscillator (1KHz)
	m_Frequency = 1000;
}

// ----------------------------------------------------------------------------
//! \brief Start the watch dog
void Watchdog::Start(uint32_t _nTimeout, bool _bDebug)
{
uint32_t		regPrimask;
	
#ifdef ENABLE_WATCHDOG
	// Configure the watchdog
	dbgprintf("Watchdog Constructor, Frequency = %d Hz, Timeout = %d ...\n",m_Frequency,_nTimeout);	
	regPrimask = DisableGlobalIRQ();
	BOARD_WDOG_Unlock();
	BOARD_WDOG_setTimeOut(_nTimeout);
	BOARD_WDOG_Feed();
	EnableGlobalIRQ(regPrimask);
	m_Cnt = 0;
	dbgprintf("... Watchdog Constructor done.\n");	
#endif
}

// ----------------------------------------------------------------------------
//! \brief Refresh the watch dog
void Watchdog::Refresh()
{
#ifdef ENABLE_WATCHDOG
	BOARD_WDOG_Feed();
#endif
}

// ----------------------------------------------------------------------------
// The watchdog interrupt (when running in debug mode)

extern "C" void WDT_IRQHandler(void)
{
#ifdef ENABLE_WATCHDOG
	m_Cnt++;
#endif
}
